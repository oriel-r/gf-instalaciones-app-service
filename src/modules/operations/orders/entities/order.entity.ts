import { ApiProperty } from "@nestjs/swagger";
import { BaseEntity } from "src/common/entities/base.entity";
import { Instalation } from "src/modules/operations/instalations/entities/instalation.entity";
import { Column, DeepPartial, Entity, OneToMany, PrimaryColumn, PrimaryGeneratedColumn } from "typeorm";

@Entity()
export class Order extends BaseEntity {

    @ApiProperty({
        title: 'id',
        description: 'autogenerated uuid for internal use'
    })
    @PrimaryGeneratedColumn('uuid')
    id: string


    @ApiProperty({
        title: 'orderNumber',
        description: 'the order number inserted by admin'
    })
    @Column({nullable: true, type: 'varchar' })
    orderNumber: string

    @ApiProperty({
        title: 'title',
        description: "Order's title"
    })
    @Column({nullable: false, type: 'varchar' })
    title: string

    @ApiProperty({
        title: 'description',
        description: "order's description"
    })
    @Column({nullable: true, type: 'varchar' })
    description: string

    @ApiProperty({
        title: 'description',
        description: "order's status"
    })
    @Column({nullable: true, type: 'date' })
    endDate: Date | null
    
    @ApiProperty({
        title: 'progress',
        description: "order that all order's instalations are completed",
        type: 'boolean',
        default: 'false'
    })
    @Column('boolean', {default: false})
    completed: boolean

    @ApiProperty({
        title: 'progress',
        description: "order's progress",
        type: 'number'
    })
    @Column( 'varchar', {default: '0/0'})
    instalationsFinished: string

    @ApiProperty({
        title: 'progress',
        description: "order's progress",
        type: 'number'
    })
    @Column('decimal', {precision: 5, scale: 2, default: 0.00})
    progress: number
    
    @ApiProperty({
        title: 'instalations',
        description: 'list of instalations',
        type: [Instalation]
    })
    @OneToMany(() => Instalation, (instalation) => instalation.order, {nullable: true})
    instalations: Instalation[]


    constructor(partial: DeepPartial<Order>) {
        super()
        Object.assign(this, partial)
    }
    
}

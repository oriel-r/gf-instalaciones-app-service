import { ApiProperty } from "@nestjs/swagger";
import { BaseEntity } from "src/common/entities/base.entity";
import { City } from "src/modules/locations/city/entities/city.entity";
import { Installation } from "src/modules/operations/installations/entities/installation.entity";
import { Column, DeepPartial, Entity, ManyToOne, OneToMany, PrimaryGeneratedColumn } from "typeorm";

@Entity()
export class Address extends BaseEntity{
    
    @ApiProperty({
        title: "id",
        description: "autogenerated id"
    })
    @PrimaryGeneratedColumn('uuid')
    id: string

    @ApiProperty({
        title: 'street'
    })
    @Column('varchar', {nullable: false})
    street: string

    @ApiProperty({
        title: 'number'
    })
    @Column('varchar', {nullable: false})
    number: string
   
    @ApiProperty({
        title: 'number'
    })
    @Column('varchar', {nullable: false})
    note: string
    
    
    @ApiProperty({
        title: 'postalCode'
    })
    @Column('varchar', {nullable: false})
    postalCode: string

    @ApiProperty({
        title: 'startDate',
        description: "The day when start the installation"
    })
    @OneToMany(() => Installation, (installation) => installation.address, {nullable: true})
    installations: Installation[]

    @ApiProperty({
        title: 'city'
    })
    @ManyToOne(() => City, (city) => city.addresses, {eager: true})
    city: City

    constructor(partial: DeepPartial<Address>) {
        super()
        Object.assign(this, partial)
    }

}
